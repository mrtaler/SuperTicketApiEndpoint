<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Serilog.Extensions.Logging.File</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Logging.FileLoggerExtensions">
            <summary>
            Extends <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> with methods for configuring file logging.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.FileLoggerExtensions.AddFile(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
            Adds a file logger initialized from the supplied configuration section.
            </summary>
            <param name="loggerFactory">The logger factory.</param>
            <param name="configuration">A configuration section with file parameters.</param>
            <returns>A logger factory to allow further configuration.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.FileLoggerExtensions.AddFile(Microsoft.Extensions.Logging.ILoggerFactory,System.String,Microsoft.Extensions.Logging.LogLevel,System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Logging.LogLevel},System.Boolean,System.Nullable{System.Int64},System.Nullable{System.Int32})">
            <summary>
            Adds a file logger initialized from the supplied configuration section.
            </summary>
            <param name="loggerFactory">The logger factory.</param>
            <param name="pathFormat">Filname to write. The filename may include {Date} to specify how the date portion of the 
            filename is calculated. May include environment variables.</param>
            <param name="minimumLevel">The level below which events will be suppressed (the default is <see cref="F:Microsoft.Extensions.Logging.LogLevel.Information"/>).</param>
            <param name="levelOverrides">A dictionary mapping logger name prefixes to minimum logging levels.</param>
            <param name="isJson">If true, the log file will be written in JSON format.</param>
            <param name="fileSizeLimitBytes">The maximum size, in bytes, to which any single log file will be allowed to grow.
            For unrestricted growth, pass null. The default is 1 GB.</param>
            <param name="retainedFileCountLimit">The maximum number of log files that will be retained, including the current
            log file. For unlimited retention, pass null. The default is 31.</param>
            <returns>A logger factory to allow further configuration.</returns>
        </member>
    </members>
</doc>
